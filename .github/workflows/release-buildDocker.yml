name: 2.🐳构建 Docker 镜像 (FrankenPHP)

on:
    # 允许被其他仓库调用
    workflow_call:
    # 支持手动触发
    workflow_dispatch:

jobs:
    # 调用上游 reusable workflow
    release_buildWeb:
        uses: LoveCards/LoveCardsV2/.github/workflows/release-buildWeb.yml@dev

    release_buildDocker:
        name: 🛠️ 构建 Docker 镜像
        needs: release_buildWeb # 等上游跑完
        runs-on: ubuntu-latest
        env:
            commit_sha: ${{ github.sha }}
            docker_name: lovecards-web-frankenphp
            release_buildWeb_file_name: LoveCardsV2

        steps:
            - name: 🏡 拉取代码
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1

            - name: 📁 创建所需文件夹
              run: |
                  # 构建目录
                  mkdir -p ./tmp/a
                  # 导出目录
                  mkdir -p ./tmp/b/data/web
                  mkdir -p ./tmp/b/image
                  # Docker layer 缓存
                  mkdir -p ./tmp/.buildx-cache

            - name: 🔧 设置 Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: 📥 获取项目主体压缩包
              uses: actions/download-artifact@v4
              with:
                  name: ${{env.release_buildWeb_file_name}} # 与上游 upload-artifact 的 name 一致
                  path: ./tmp

            - name: 🔓 解压项目并移入所需配置
              run: |
                  unzip -q ./tmp/${{env.release_buildWeb_file_name}}.zip -d ./tmp/a
                  ls -l ./tmp/a
                  mv ./.docker/frankenphp/Dockerfile ./tmp/a
                  mv ./.frankenphp/Caddyfile ./tmp/a

            - name: 📥 缓存 Docker 层
              uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ hashFiles('tmp/Dockerfile') }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: 🐳 构建镜像
              id: docker-build
              run: |
                  docker buildx build \
                    --tag ${{env.docker_name}}:latest \
                    --cache-from=type=local,src=/tmp/.buildx-cache \
                    --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
                    --load \
                    ./tmp/a

            - name: 🗜️ 导出镜像
              run: |
                  docker save ${{env.docker_name}}:latest | pigz -9 > ./tmp/b/image/${{env.docker_name}}.tar.gz

            - name: 📦 创建最终ZIP
              run: |
                  mv ./.docker/frankenphp/.env.example ./tmp/b/.env
                  mv ./.docker/frankenphp/docker-compose.yaml ./tmp/b
                  mv ./.docker/frankenphp/install.sh ./tmp/b
                  mv ./tmp/a/public ./tmp/b/data/web
                  mv ./tmp/a/config ./tmp/b/data/web
                  (cd ./tmp/b && zip -r ../../${{env.docker_name}}.zip .)

            - name: 📤 上传镜像为构建产物
              uses: actions/upload-artifact@v4
              with:
                  name: ${{env.docker_name}}
                  path: ${{env.docker_name}}.zip
