name: build-dev

on:
    # 手动触发部署
    workflow_dispatch:

jobs:
    # 调用上游 reusable workflow
    Build_AdminFrontEnd:
        uses: LoveCards/v2_frontend_admin/.github/workflows/build-call.yml@main
    Build_Release:
        needs: Build_AdminFrontEnd # 等上游跑完
        runs-on: ubuntu-latest
        env:
            commit_sha: ${{ github.sha }}

        steps:
            - name: 🏡拉取代码
              uses: actions/checkout@v3
              with:
                  # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录
                  fetch-depth: 0

            - name: 💾缓存 Composer 依赖
              uses: actions/cache@v3
              with:
                  path: /tmp/composer-cache
                  key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

            - name: 🛠️安装依赖
              uses: php-actions/composer@v6
              with:
                  php_version: "8.1"
                  version: 2

            # 下载上游生成的打包文件
            - name: 📥下载前端 zip
              uses: actions/download-artifact@v4
              with:
                  name: admin # 与上游 upload-artifact 的 name 一致
                  path: ./tmp

            #解压到 ./public，并去掉外层目录
            - name: 🔓解压前端到 ./public
              run: |
                mkdir -p public
                unzip -q ./tmp/admin.zip -d ./tmp
                # 如果你的 zip 里面是 admin/ 目录，把内容搬到 public
                mv ./tmp/admin/* ./public/
                rm -rf ./tmp

            - name: ❌删除非必要文件
              run: |
                  rm -rf .gitignore .github .dev ToDo.md .git DOCKER_ENV docker_tag output.log composer.json composer.lock script lock.txt upload.md test.env

            - name: 🏷️设置压缩包名称
              id: set_zip_name
              run: echo "zip_name=LoveCardsDev-${commit_sha:0:7}.zip" >> $GITHUB_OUTPUT

            - name: 📦压缩为zip
              run: zip -r ${{ steps.set_zip_name.outputs.zip_name }} ./

            - name: 🚀上传Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.set_zip_name.outputs.zip_name }}
                  path: ${{ steps.set_zip_name.outputs.zip_name }}
                  if-no-files-found: error
